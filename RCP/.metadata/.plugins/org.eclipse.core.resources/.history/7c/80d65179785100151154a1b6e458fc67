package com.starterkit.scheduler;

import java.util.ArrayList;

import org.eclipse.core.databinding.observable.list.WritableList;
import org.eclipse.core.databinding.observable.value.WritableValue;

public class DataModel {
	private static DataModel instance = null;
	private WritableList todayTasks = new WritableList(new ArrayList<Task>(),
			Task.class);
	
	private WritableList tomorrowTasks = new WritableList(new ArrayList<Task>(),
			Task.class);
	private WritableList archivedTasks = new WritableList(new ArrayList<Task>(),
			Task.class);

	protected DataModel() {
		Task task= new Task(1L, "Wrocław", "Header", "Description");
		todayTasks.add(0, (new WritableValue().setValue(task)));
		todayTasks.add(new Task(2L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(3L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(4L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(5L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(6L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(7L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(8L, "Wrocław", "Header", "Description"));
		todayTasks.add(new Task(9L, "Wrocław", "Header", "Description"));
	}

	public static DataModel getInstance() {
		if (instance == null) {
			instance = new DataModel();
		}
		return instance;
	}

	public WritableList getTodayTasks() {
		return todayTasks;
	}
	
	public WritableList getTomorrowTasks() {
		return tomorrowTasks;
	}
	
	public WritableList getArchivedTasks() {
		return archivedTasks;
	}
}
